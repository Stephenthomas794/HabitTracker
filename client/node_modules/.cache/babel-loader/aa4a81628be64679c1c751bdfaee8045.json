{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephenthomas/Desktop/HabitTrackerReact/client/src/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport './Auth.css';\nimport GoogleButton from 'react-google-button';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { withRouter } from 'react-router-dom'; // refresh token\n//import { refreshTokenSetup } from '../utils/refreshToken';\n\nconst CLIENT_ID = '931153056282-750tm4j5ehreopjf5db02huk0v4gg3ac.apps.googleusercontent.com';\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogined: false,\n      email: undefined,\n      accessToken: ''\n    };\n    this.login = this.login.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n  }\n\n  login(response) {\n    if (response.accessToken) {\n      this.setState(state => ({\n        isLogined: true,\n        accessToken: response.accessToken\n      }));\n    }\n\n    console.log(response);\n  }\n\n  logout(response) {\n    this.setState(state => ({\n      isLogined: false,\n      accessToken: ''\n    }));\n  }\n\n  handleLoginFailure(response) {\n    alert('Failed to log in');\n  }\n\n  handleLogoutFailure(response) {\n    alert('Failed to log out');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.isLogined ? /*#__PURE__*/_jsxDEV(GoogleLogout, {\n        clientId: CLIENT_ID,\n        buttonText: \"Logout\",\n        onLogoutSuccess: this.logout,\n        onFailure: this.handleLogoutFailure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: CLIENT_ID,\n        buttonText: \"Login\",\n        onSuccess: this.login,\n        onFailure: this.handleLoginFailure,\n        cookiePolicy: 'single_host_origin',\n        responseType: \"code,token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Auth);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/stephenthomas/Desktop/HabitTrackerReact/client/src/Auth/Auth.js"],"names":["React","Component","GoogleButton","GoogleLogin","GoogleLogout","withRouter","CLIENT_ID","Auth","constructor","props","state","isLogined","email","undefined","accessToken","login","bind","handleLoginFailure","logout","handleLogoutFailure","response","setState","console","log","alert","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AAEA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;AACA;;AAGE,MAAMC,SAAS,GAAG,0EAAlB;;AAEF,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,KAAK,EAAEC,SAFI;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAMA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKG,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBH,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDD,EAAAA,KAAK,CAAEK,QAAF,EAAY;AACf,QAAGA,QAAQ,CAACN,WAAZ,EAAwB;AACtB,WAAKO,QAAL,CAAcX,KAAK,KAAK;AACtBC,QAAAA,SAAS,EAAE,IADW;AAEtBG,QAAAA,WAAW,EAAEM,QAAQ,CAACN;AAFA,OAAL,CAAnB;AAID;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD;;AAEDF,EAAAA,MAAM,CAAEE,QAAF,EAAY;AAChB,SAAKC,QAAL,CAAcX,KAAK,KAAK;AACtBC,MAAAA,SAAS,EAAE,KADW;AAEtBG,MAAAA,WAAW,EAAE;AAFS,KAAL,CAAnB;AAID;;AAEDG,EAAAA,kBAAkB,CAAEG,QAAF,EAAY;AAC5BI,IAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;;AAEDL,EAAAA,mBAAmB,CAAEC,QAAF,EAAY;AAC7BI,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACA;AAAA,gBACI,KAAKf,KAAL,CAAWC,SAAX,gBACA,QAAC,YAAD;AACE,QAAA,QAAQ,EAAGL,SADb;AAEE,QAAA,UAAU,EAAC,QAFb;AAGE,QAAA,eAAe,EAAG,KAAKY,MAHzB;AAIE,QAAA,SAAS,EAAG,KAAKC;AAJnB;AAAA;AAAA;AAAA;AAAA,cADA,gBAOiB,QAAC,WAAD;AACf,QAAA,QAAQ,EAAGb,SADI;AAEf,QAAA,UAAU,EAAC,OAFI;AAGf,QAAA,SAAS,EAAG,KAAKS,KAHF;AAIf,QAAA,SAAS,EAAG,KAAKE,kBAJF;AAKf,QAAA,YAAY,EAAG,oBALA;AAMf,QAAA,YAAY,EAAC;AANE;AAAA;AAAA;AAAA;AAAA;AARrB;AAAA;AAAA;AAAA;AAAA,YADA;AAqBD;;AA/D0B;;AAiE7B,oBAAeZ,UAAU,CAAEE,IAAF,CAAzB","sourcesContent":["import React, {Component} from 'react';\nimport './Auth.css';\nimport GoogleButton from 'react-google-button';\n\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n\nimport { withRouter } from 'react-router-dom';\n\n// refresh token\n//import { refreshTokenSetup } from '../utils/refreshToken';\n\n\n  const CLIENT_ID = '931153056282-750tm4j5ehreopjf5db02huk0v4gg3ac.apps.googleusercontent.com'; \n\nclass Auth extends Component {\n   constructor(props) {\n    super(props);\n\n    this.state = {\n      isLogined: false,\n      email: undefined,\n      accessToken: ''\n    };\n\n    this.login = this.login.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n  }\n\n  login (response) {\n    if(response.accessToken){\n      this.setState(state => ({\n        isLogined: true,\n        accessToken: response.accessToken\n      }));\n    }\n    console.log(response);\n  }\n\n  logout (response) {\n    this.setState(state => ({\n      isLogined: false,\n      accessToken: ''\n    }));\n  }\n\n  handleLoginFailure (response) {\n    alert('Failed to log in')\n  }\n\n  handleLogoutFailure (response) {\n    alert('Failed to log out')\n  }\n\n  render() {\n    return (\n    <div>\n      { this.state.isLogined ?\n        <GoogleLogout\n          clientId={ CLIENT_ID }\n          buttonText='Logout'\n          onLogoutSuccess={ this.logout }\n          onFailure={ this.handleLogoutFailure }\n        >\n        </GoogleLogout>: <GoogleLogin\n          clientId={ CLIENT_ID }\n          buttonText='Login'\n          onSuccess={ this.login }\n          onFailure={ this.handleLoginFailure }\n          cookiePolicy={ 'single_host_origin' }\n          responseType='code,token'\n        />\n      }\n\n    </div>\n    )\n  }\n}\nexport default withRouter (Auth);\n"]},"metadata":{},"sourceType":"module"}