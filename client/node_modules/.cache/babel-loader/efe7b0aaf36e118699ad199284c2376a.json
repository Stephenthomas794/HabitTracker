{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephenthomas/Desktop/HabitTrackerReact/client/src/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport './Auth.css';\nimport GoogleButton from 'react-google-button';\n\nclass auth extends Component {\n  constructor() {\n    super();\n    this.state = {//        isSignedIn: false\n    }; //        this.getContent = this.getContent.bind(this)\n  }\n  /*\n      componentDidMount() {\n          window.gapi.load('auth2', () => {\n          this.auth2 = gapi.auth2.init({\n             client_id: '931153056282-750tm4j5ehreopjf5db02huk0v4gg3ac.apps.googleusercontent.com',\n                  })\n              \n           // this.auth2.attachClickHandler(document.querySelector('#loginButton'), {}, this.onLoginSuccessful.bind(this))\n  \n        this.auth2.then(() => {\n          console.log('on init');\n          this.setState({\n            isSignedIn: this.auth2.isSignedIn.get(),\n          });\n        });\n      });    \n           \n      window.gapi.load('signin2', function() {\n        // render a sign in button\n        // using this method will show Signed In if the user is already signed in\n          var opts = {\n              width: 200,\n              height: 50,\n              onSuccess: this.onSuccess.bind(this),\n              }\n              gapi.signin2.render('loginButton', opts)\n              })\n          }\n      \n      \n      onSuccess() {\n          console.log('on success')\n          this.setState({\n              isSignedIn: true,\n              err: null\n          })\n      }\n  \n      onLoginFailed(err) {\n          this.setState({\n              isSignedIn: false,\n              error: err,\n          })\n      }\n  \n      getContent(){\n          if  (this.state.isSignedIn){\n              return <p>hello user, you are signed in </p>\n          } else {\n              return(\n                  <GoogleButton\n                      onClick={() => { console.log('Google button clicked') }}\n                  />  \n          )\n      }\n      }\n  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginAuth\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleButton, {\n        onClick: () => {\n          console.log('Google button clicked');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), \"//  \", this.getContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default auth;","map":{"version":3,"sources":["/Users/stephenthomas/Desktop/HabitTrackerReact/client/src/Auth/Auth.js"],"names":["React","Component","GoogleButton","auth","constructor","state","render","console","log","getContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AACzBG,EAAAA,WAAW,GAAE;AACb;AACA,SAAKC,KAAL,GAAa,CACjB;AADiB,KAAb,CAFa,CAKjB;AACK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,MAAM,GAAE;AACR,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,YAAD;AACI,QAAA,OAAO,EAAE,MAAM;AAAEC,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAAsC;AAD3D;AAAA;AAAA;AAAA;AAAA,cADJ,UAIO,KAAKC,UAAL,EAJP;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOF;;AAzE2B;;AA2E7B,eAAeN,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport './Auth.css';\nimport GoogleButton from 'react-google-button';\n\nclass auth extends Component {\n    constructor(){\n    super();\n    this.state = {\n//        isSignedIn: false\n        }\n//        this.getContent = this.getContent.bind(this)\n    }\n/*\n    componentDidMount() {\n        window.gapi.load('auth2', () => {\n        this.auth2 = gapi.auth2.init({\n           client_id: '931153056282-750tm4j5ehreopjf5db02huk0v4gg3ac.apps.googleusercontent.com',\n                })\n            \n         // this.auth2.attachClickHandler(document.querySelector('#loginButton'), {}, this.onLoginSuccessful.bind(this))\n\n      this.auth2.then(() => {\n        console.log('on init');\n        this.setState({\n          isSignedIn: this.auth2.isSignedIn.get(),\n        });\n      });\n    });    \n         \n    window.gapi.load('signin2', function() {\n      // render a sign in button\n      // using this method will show Signed In if the user is already signed in\n        var opts = {\n            width: 200,\n            height: 50,\n            onSuccess: this.onSuccess.bind(this),\n            }\n            gapi.signin2.render('loginButton', opts)\n            })\n        }\n    \n    \n    onSuccess() {\n        console.log('on success')\n        this.setState({\n            isSignedIn: true,\n            err: null\n        })\n    }\n\n    onLoginFailed(err) {\n        this.setState({\n            isSignedIn: false,\n            error: err,\n        })\n    }\n\n    getContent(){\n        if  (this.state.isSignedIn){\n            return <p>hello user, you are signed in </p>\n        } else {\n            return(\n                <GoogleButton\n                    onClick={() => { console.log('Google button clicked') }}\n                />  \n        )\n    }\n    }\n*/\n    render(){\n    return (\n        <div className=\"LoginAuth\">\n            <GoogleButton\n                onClick={() => { console.log('Google button clicked') }}\n            />\n          //  {this.getContent()}\n        </div> \n)}}\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}