{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephenthomas/Desktop/HabitTrackerReact/client/src/Sign/Sign.js\";\nimport React, { Component } from 'react';\nimport './Sign.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from 'react-router-dom';\n\nclass Sign extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      password: '',\n      confirmPassword: ''\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleConfirmPasswordChange = this.handleConfirmPasswordChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.confirmPasswordMatch = this.confirmPasswordMatch.bind(this);\n  }\n\n  handleEmailChange(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  handleConfirmPasswordChange(event) {\n    this.setState({\n      confirmPassword: event.target.value\n    });\n  }\n\n  confirmPasswordMatch() {\n    if (this.state.password === this.state.confirmPassword) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  handleFormSubmit(event) {\n    const checker = this.confirmPasswordMatch();\n\n    if (checker === true) {\n      this.setState({\n        email: event.target.value\n      });\n      this.setState({\n        name: event.target.value\n      });\n      this.setState({\n        password: event.target.value\n      });\n      this.setState({\n        confirmPassword: event.target.value\n      });\n      const data = {\n        email: this.state.email,\n        name: this.state.name,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword\n      };\n      fetch('http://127.0.0.1:5000/api/create', {\n        crossDomain: true,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n\n        if (data.message === true) {\n          window.alert('You Already Have An Account. Please Sign In');\n        } else {\n          window.alert('Your Account Has Been Created. Please Sign In');\n        }\n      });\n    } else {\n      window.alert('The Passwords Do Not Match');\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //const value = this.state.email\n      //const emailToSend = this.props.params.value \n      _jsxDEV(\"div\", {\n        className: \"SignUp\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              required: true,\n              value: this.state.email,\n              onChange: this.handleEmailChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We'll never share your email with anyone else.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Name\",\n              required: true,\n              value: this.state.name,\n              onChange: this.handleNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"SignUpBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Enter Password\",\n              required: true,\n              value: this.state.password,\n              onChange: this.handlePasswordChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"SignUpConfirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              required: true,\n              value: this.state.confirmPassword,\n              onChange: this.handleConfirmPasswordChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)\n    );\n  }\n\n}\n\nexport default _c = withRouter(Sign);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/stephenthomas/Desktop/HabitTrackerReact/client/src/Sign/Sign.js"],"names":["React","Component","Button","Form","withRouter","Sign","constructor","state","email","name","password","confirmPassword","handleEmailChange","bind","handleNameChange","handlePasswordChange","handleConfirmPasswordChange","handleFormSubmit","confirmPasswordMatch","event","setState","target","value","checker","data","fetch","crossDomain","method","headers","body","JSON","stringify","then","response","json","console","log","message","window","alert","render"],"mappings":"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","sourcesContent":["import React, {Component}  from 'react';\nimport './Sign.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from 'react-router-dom';\n\nclass Sign extends Component {\n    constructor() {\n    super();\n    this.state = {\n            email: '',\n            name: '',\n            password: '',\n            confirmPassword: ''\n        }\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleConfirmPasswordChange = this.handleConfirmPasswordChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.confirmPasswordMatch = this.confirmPasswordMatch.bind(this);\n    }\n\nhandleEmailChange(event){\n    this.setState({ email: event.target.value })\n}\n\nhandleNameChange(event){\n    this.setState({ name: event.target.value })\n\n}\n\nhandlePasswordChange(event){\n    this.setState({ password: event.target.value })\n}\n\nhandleConfirmPasswordChange(event){\n    this.setState({ confirmPassword: event.target.value })\n}\n\nconfirmPasswordMatch(){\n    if (this.state.password === this.state.confirmPassword){\n        return true\n    } else{\n        return false\n    }\n}\n\nhandleFormSubmit(event){\n    const checker = this.confirmPasswordMatch()\n    if (checker === true){\n        this.setState({ email: event.target.value })\n        this.setState({ name: event.target.value })\n        this.setState({ password: event.target.value })\n        this.setState({ confirmPassword: event.target.value })\n    \n        const data = { email: this.state.email, name: this.state.name, password: this.state.password, confirmPassword: this.state.confirmPassword }\n    \n        fetch('http://127.0.0.1:5000/api/create', {\n            crossDomain:true,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(data),\n            })\n            .then(response => response.json())\n            .then(data => {\n            console.log('Success:', data);\n            if (data.message === true) {\n                window.alert('You Already Have An Account. Please Sign In');\n            } else { \n                window.alert('Your Account Has Been Created. Please Sign In');\n            }\n            })\n    }\n    else{\n        window.alert('The Passwords Do Not Match');\n    }\n\n}\n\n\nrender() {\nreturn (\n\n//const value = this.state.email\n//const emailToSend = this.props.params.value \n\n    <div className=\"SignUp\"> \n    <Form onSubmit={this.handleFormSubmit} >\n\n<Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" \n    required value = { this.state.email} \n    onChange={ this.handleEmailChange } />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group>\n    <Form.Label>Name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Name\" \n    required value = { this.state.name} \n    onChange={ this.handleNameChange }  />\n  </Form.Group>\n\n  <Form.Group controlId=\"SignUpBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Enter Password\" \n    required value = { this.state.password} \n    onChange={ this.handlePasswordChange } />\n  </Form.Group>\n\n    <Form.Group controlId=\"SignUpConfirmPassword\">\n    <Form.Label>Confirm Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Confirm Password\" \n    required value = { this.state.confirmPassword} \n    onChange={ this.handleConfirmPasswordChange } />\n  </Form.Group>\n  \n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n\n</Form>        \n    </div>\n)}}\n\nexport default withRouter (Sign);\n"]},"metadata":{},"sourceType":"module"}