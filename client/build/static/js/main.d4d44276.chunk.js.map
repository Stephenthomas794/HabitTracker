{"version":3,"sources":["Nav/Nav.js","Sign/Sign.js","Auth/Auth.js","Space/Space.js","SignIn/SignIn.js","HomePage/HomePage.js","Add/Add.js","Habit/Habit.js","LandPage/LandPage.js","Error/Error.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","state","email","this","setState","preProps","className","Navbar","bg","variant","Brand","href","Toggle","Collapse","Text","Component","Sign","name","password","confirmPassword","handleEmailChange","bind","handleNameChange","handlePasswordChange","handleConfirmPasswordChange","handleFormSubmit","confirmPasswordMatch","event","target","value","data","fetch","crossDomain","method","headers","body","JSON","stringify","then","response","json","console","log","message","window","alert","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","required","onChange","Button","withRouter","CLIENT_ID","Auth","isLogined","undefined","login","handleLoginFailure","logout","handleLogoutFailure","accessToken","profileObj","mode","setEmail","history","push","clientId","buttonText","onLogoutSuccess","onFailure","onSuccess","cookiePolicy","responseType","space","SignIn","preventDefault","HomePage","handleSubmit","setEmailObj","obj","newEmail","Table","striped","bordered","hover","handle","Add","nameOfHabit","timesPerDay","list","handleNameOfHabit","handleTimesPerDay","handlePullData","handlePopulate","handleGetEntry","index","len","length","i","updateList","Total","onClick","handleAddTotal","as","Habit","prevProps","LandPage","handleLoad","Object","keys","forceUpdate","Error","App","path","component","routeProps","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4d44276.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Nav.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Nav extends Component {\n    constructor(props){\n    super();\n    this.state = {\n    email: ''\n    }\n\n    }\n    componentDidMount(){\n    this.setState({\n    email: this.props.email\n    })\n    }\n\n    componentDidUpdate(preProps){\n    if (this.props.email !== preProps.email){\n        this.setState({\n            email: this.props.email\n        })\n    }\n    }\n\nrender(){\n\n    return (\n    <div className=\"Nav\">\n    <Navbar bg=\"dark\" variant=\"dark\">\n  <Navbar.Brand href=\"/\">StephenTracker</Navbar.Brand>\n  <Navbar.Toggle />\n  <Navbar.Collapse className=\"justify-content-end\">\n    <Navbar.Text>\n      Signed in as: { this.props.email }\n    </Navbar.Text>\n  </Navbar.Collapse>\n</Navbar>\n    </div>\n)}};\n\nexport default Nav;\n","import React, {Component}  from 'react';\nimport './Sign.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from 'react-router-dom';\n\nclass Sign extends Component {\n    constructor() {\n    super();\n    this.state = {\n            email: '',\n            name: '',\n            password: '',\n            confirmPassword: ''\n        }\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleConfirmPasswordChange = this.handleConfirmPasswordChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.confirmPasswordMatch = this.confirmPasswordMatch.bind(this);\n    }\n\nhandleEmailChange(event){\n    this.setState({ email: event.target.value })\n}\n\nhandleNameChange(event){\n    this.setState({ name: event.target.value })\n\n}\n\nhandlePasswordChange(event){\n    this.setState({ password: event.target.value })\n}\n\nhandleConfirmPasswordChange(event){\n    this.setState({ confirmPassword: event.target.value })\n}\n\nconfirmPasswordMatch(){\n    if (this.state.password === this.state.confirmPassword){\n        return true\n    } else{\n        return false\n    }\n}\n\nhandleFormSubmit(event){\n    const checker = this.confirmPasswordMatch()\n    if (checker === true){\n        this.setState({ email: event.target.value })\n        this.setState({ name: event.target.value })\n        this.setState({ password: event.target.value })\n        this.setState({ confirmPassword: event.target.value })\n    \n        const data = { email: this.state.email, name: this.state.name, password: this.state.password, confirmPassword: this.state.confirmPassword }\n    \n        fetch('http://127.0.0.1:5000/api/create', {\n            crossDomain:true,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(data),\n            })\n            .then(response => response.json())\n            .then(data => {\n            console.log('Success:', data);\n            if (data.message === true) {\n                window.alert('You Already Have An Account. Please Sign In');\n            } else { \n                window.alert('Your Account Has Been Created. Please Sign In');\n            }\n            })\n    }\n    else{\n        window.alert('The Passwords Do Not Match');\n    }\n\n}\n\n\nrender() {\nreturn (\n\n//const value = this.state.email\n//const emailToSend = this.props.params.value \n\n    <div className=\"SignUp\"> \n    <Form onSubmit={this.handleFormSubmit} >\n\n<Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" \n    required value = { this.state.email} \n    onChange={ this.handleEmailChange } />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group>\n    <Form.Label>Name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Name\" \n    required value = { this.state.name} \n    onChange={ this.handleNameChange }  />\n  </Form.Group>\n\n  <Form.Group controlId=\"SignUpBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Enter Password\" \n    required value = { this.state.password} \n    onChange={ this.handlePasswordChange } />\n  </Form.Group>\n\n    <Form.Group controlId=\"SignUpConfirmPassword\">\n    <Form.Label>Confirm Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Confirm Password\" \n    required value = { this.state.confirmPassword} \n    onChange={ this.handleConfirmPasswordChange } />\n  </Form.Group>\n  \n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n\n</Form>        \n    </div>\n)}}\n\nexport default withRouter (Sign);\n","import React, {Component} from 'react';\nimport './Auth.css';\nimport GoogleButton from 'react-google-button';\n\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n\nimport { withRouter } from 'react-router-dom';\n\n// refresh token\n//import { refreshTokenSetup } from '../utils/refreshToken';\n\n\n  const CLIENT_ID = '931153056282-750tm4j5ehreopjf5db02huk0v4gg3ac.apps.googleusercontent.com'; \n\nclass Auth extends Component {\n   constructor(props) {\n    super(props);\n\n    this.state = {\n      isLogined: false,\n      email: undefined\n    };\n\n    this.login = this.login.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n  }\n\n  login (response) {\n    if(response.accessToken){\n      this.setState(state => ({\n        isLogined: true,\n        email: response.profileObj.email\n      }));\n    }\n    console.log(response.profileObj.email);\n    const data = {email: response.profileObj.email}\n    fetch('http://127.0.0.1:5000/api/google', {\n        crossDomain: true,\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify(data),\n        })\n        .then(response => response.json())\n        .then(data => {\n        console.log('Success', data);\n        if (data.message === true){ \n            window.alert(\"Failed Creating your account \");\n        } else{\n        this.props.setEmail(this.state.email) \n        this.props.history.push('/email');\n        }\n        })\n  }\n\n  logout (response) {\n    this.setState(state => ({\n      isLogined: false,\n      email: undefined\n    }));\n  }\n\n  handleLoginFailure (response) {\n    alert('Failed to log in')\n  }\n\n  handleLogoutFailure (response) {\n    alert('Failed to log out')\n  }\n\n  render() {\n    return (\n    <div>\n      { this.state.isLogined ?\n        <GoogleLogout\n          clientId={ CLIENT_ID }\n          buttonText='Logout'\n          onLogoutSuccess={ this.logout }\n          onFailure={ this.handleLogoutFailure }\n        >\n        </GoogleLogout>: <GoogleLogin\n          clientId={ CLIENT_ID }\n          buttonText='Login'\n          onSuccess={ this.login }\n          onFailure={ this.handleLoginFailure }\n          cookiePolicy={ 'single_host_origin' }\n          responseType='code,token'\n        />\n      }\n{ this.state.email ? <h5>Your Email is:  <br/><br/> { this.state.email } <br/><br/> Your password is: <br/><br/> google</h5> : null }\n    </div>\n    )\n  }\n}\nexport default withRouter (Auth);\n","import './Space.css';\n\nconst space = () => {\n    return (\n        <div className=\"Break\">\n            <br />\n            <p> Or Sign In with Google </p> \n        </div>\n)};\n\nexport default space;\n","import React, { Component } from 'react';\nimport './SignIn.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from 'react-router-dom';\n\nclass SignIn extends Component {\n    constructor() {\n    super();\n    this.state = {\n        email: '',\n        password: ''\n    }\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    }\n\nhandleEmailChange(event){\n    this.setState({ email: event.target.value })\n}\n\nhandlePasswordChange(event){\n    this.setState({ password: event.target.value })\n}\n\nhandleFormSubmit(event){\n    event.preventDefault();\n    \n    const data = { email: this.state.email, password: this.state.password }\n    fetch('http://127.0.0.1:5000/api/signIn', {\n        crossDomain: true,\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify(data),\n        })\n        .then(response => response.json())\n        .then(data => {\n        console.log('Success', data);\n        if (data.message === true){ \n            window.alert(\"You do not have an account\");\n        } else if (data.message === false){\n            window.alert(\"The password you entered does not match what we have on file\");\n        } else{\n        this.props.setEmail(this.state.email) \n        this.props.history.push('/email');\n        }\n        })\n    }\n\n    render() {\n    \n    return (\n    \n    <div className= 'SignIn'>\n    <Form onSubmit={this.handleFormSubmit}> \n    \n    <Form.Group controlId=\"BasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\" value = { this.state.email} onChange={ this.handleEmailChange } />\n    </Form.Group>\n\n    <Form.Group controlId=\"BasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Enter Password\" value = { this.state.password} onChange={ this.handlePasswordChange } />\n    </Form.Group>\n\n    <Button variant=\"primary\" type=\"submit\">\n        Submit\n    </Button>\n\n  </Form>\n  </div>\n)}}\n\nexport default withRouter ( SignIn);\n","import React, { Component } from 'react';\nimport Sign from '../Sign/Sign';\nimport Auth from '../Auth/Auth';\nimport Space from '../Space/Space';\n\nimport SignIn from '../SignIn/SignIn';\nimport Table from 'react-bootstrap/Table';\n\nclass HomePage extends Component { \n    constructor() {\n    super();\n    this.state = {\n            email: undefined,\n            name: undefined,\n            password: undefined,\n            confirmPassword: undefined\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setEmail = this.setEmail.bind(this)\n        this.setEmailObj = this.setEmailObj.bind(this);\n    }\n\nhandleSubmit(email, name, password, confirmPassword){\n    this.setState({\n        email: email,\n        name: name,\n        password: password,\n        confirmPassword: confirmPassword\n    })\n}\n\nsetEmailObj(obj){\n    this.setState({\n        email: obj\n    })\n    this.props.setEmail(this.state.email)\n}\n\nsetEmail(newEmail){\n    this.setState({\n       email:newEmail\n    })\n    this.props.setEmail(this.state.email)\n}\n    render() {\n    return (\n        <div className=\"HomePage\">\n        <header className=\"HomePage-header\">\n        <Table striped bordered hover variant=\"dark\">\n            <thead>\n                <tr>\n                <th>\n                    Sign In\n                </th>\n                <th>\n                    Sign Up\n                </th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                <td>\n                    <SignIn setEmail = {this.setEmail} />\n                    <Space />\n                    <Auth setEmail = {this.setEmail} />\n                </td>\n                <td>\n                    <Sign handle={this.handleSubmit} /> \n                </td>\n                </tr>\n            </tbody>\n            </Table>\n        </header>\n        </div>\n  );\n}\n}\nexport default HomePage;\n","import React, { Component } from 'react';\nimport './Add.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\n\nclass Add extends Component {\n    constructor() {\n    super();\n    this.state = {\n        nameOfHabit:  '',\n        timesPerDay: 1,\n        list: undefined\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleNameOfHabit = this.handleNameOfHabit.bind(this);\n    this.handleTimesPerDay = this.handleTimesPerDay.bind(this);\n    this.handlePullData = this.handlePullData.bind(this);\n    this.handlePopulate = this.handlePopulate.bind(this);\n    }\n    \n    handleFormSubmit(event){\n        console.log(\"Submit Form\");\n    }\n\n    handleNameOfHabit(event){\n    this.setState({ nameOfHabit: event.target.value })\n\n    }\n\n    handleTimesPerDay(event){\n    this.setState({ timesPerDay: event.target.value })\n\n    }\n\n    handleAddTotal(event) {\n    this.handleGetEntry(event.target.value) \n    }   \n\n    handleGetEntry(index){\n    const data = {\"email\" : this.props.email, \"index\" : index};\n    console.log(\"data\", data)\n    fetch('http://127.0.0.1:5000/api/getEntry', {\n        crossDomain: true,\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },  \n        body: JSON.stringify(data),\n        })  \n        .then(response => response.json())\n        .then(data => {\n        console.log('Success', data);  \n        this.handlePullData();\n    })\n    }\n\n    handlePullData(){\n    const data = { \"email\": this.props.email }\n    fetch('http://127.0.0.1:5000/api/pullHabits', {\n        crossDomain: true,\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify(data),\n        })\n        .then(response => response.json())\n        .then(data => {\n        console.log('Success', data);\n        if (data.message !== false){\n            let len = data['nameOfHabit'].length;\n            var list = []\n            for (var i = 0; i < len; i++){\n                list.push(this.handlePopulate(data, i))\n            \n            }\n            this.setState({\n                list: list\n            })\n            this.props.updateList(list)\n        }\n    })\n}\n\n\n    handleFormSubmit(event){\n    event.preventDefault();\n\n    const data = {email: this.props.email, nameOfHabit: this.state.nameOfHabit, timesPerDay: this.state.timesPerDay}\n    fetch('http://127.0.0.1:5000/api/addEntry', {\n        crossDomain: true,\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify(data),\n        })\n        .then(response => response.json())\n        .then(data => {\n         console.log('Success:', data);\n        })\n        this.handlePullData()\n    }\n    \nhandlePopulate(data, i) {\n    return (\n    <Table striped bordered hover variant=\"dark\" key={i}>\n    <thead>\n        <tr>\n        <th>\n    {data.nameOfHabit[i]}\n     </th> \n        </tr>\n    </thead>\n    <tbody>\n        <tr> \n        <td>  \n    {data.timesPerDay[i]}\n    </td>\n        <td>\n    {data.Total[i]}\n    </td> \n        <td>\n        <Button variant=\"primary\" type=\"submit\" value={i} onClick={event => this.handleAddTotal(event, \"value\")}>\n            Add One\n        </Button>   \n        </td>\n        </tr> \n    </tbody>\n    </Table>\n    )\n    }\n\n    render() {\n\n    return (\n    <div className= \"Add\">\n    <header className=\"Add-header\">\n    <Form onSubmit={this.handleFormSubmit}>  \n    <Table striped bordered hover variant=\"dark\">\n    <thead>\n        <tr>\n        <th>\n            Enter Name of the Habit\n        </th> \n        <th> \n            Select number of times a day the Habit would be done\n        </th> \n        </tr>\n    </thead>\n    <tbody>\n        <tr> \n        <td> \n            <Form.Group>                                                                                                 \n                <Form.Control type=\"text\" placeholder=\"Enter Name of the Habit\" \n                required value = { this.state.nameOfHabit} \n                onChange={ this.handleNameOfHabit }  />  \n            </Form.Group>\n        </td>\n        <td>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Control as=\"select\" \n                required  value = { this.state.timesPerDay }\n                onChange={ this.handleTimesPerDay }  >\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                </Form.Control>\n           </Form.Group>\n        </td> \n        </tr> \n        <tr> \n        <td>\n        <Button variant=\"primary\" type=\"submit\">\n            Submit\n        </Button>\n        </td>\n        </tr>\n    </tbody>\n    </Table>\n    </Form>\n    </header>\n    </div>\n    );\n    }\n    }\n\nexport default Add;\n\n","import React, { Component } from 'react';\nimport './Habit.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nclass Habit extends Component {\n    constructor(props) {\n    super();\n    this.state = {\n        email: undefined,\n        list: undefined\n    }\n//    this.handleLoad = this.handleLoad.bind(this)\n//    this.handlePopulate = this.handlePopulate.bind(this)\n//    this.handleAddTotal = this.handleAddTotal.bind(this)\n    }\n\n//Handle function on Page Load\ncomponentDidMount(){\n    this.setState({\n        list: this.props.list\n    })\n}\n\ncomponentDidUpdate(prevProps){\n    if (this.props.list !== prevProps.list){\n        this.setState({\n            list: this.props.list\n        })\n    }\n}\n\n    render() {\n    return (\n    <div className=\"Habit\">\n    <header className=\"Habit-header\">\n    { this.state.list }\n    </header>\n    </div>\n    \n    );\n    }\n}\n\nexport default Habit;\n","import React, { Component } from 'react';\nimport Add from '../Add/Add';\nimport Habit from '../Habit/Habit';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nclass LandPage extends Component {\n    constructor() {\n    super();\n    this.state = {\n        email: undefined,       \n        list: []\n    }\n        this.setEmail = this.setEmail.bind(this)\n        this.updateList = this.updateList.bind(this)\n        this.handleAddTotal = this.handleAddTotal.bind(this)\n        this.handleGetEntry = this.handleGetEntry.bind(this)\n        this.handleLoad = this.handleLoad.bind(this)\n        this.handlePopulate = this.handlePopulate.bind(this)\n    }\n    updateList(list){\n        this.setState({\n            list: list\n        })\n    }\n    setEmail(newEmail){\n        this.setState({\n            email:newEmail\n        })\n        this.props.setEmail(this.state.email)\n        console.log(\"LandPage\", this.state.email)\n    }\n\n//Handle function on Page Load\ncomponentDidMount(){\n    return this.handleLoad()\n}\n\nhandleAddTotal(event) {\n    this.handleGetEntry(event.target.value) \n}\n\nhandleGetEntry(index){\n    const data = {\"email\" : this.props.email, \"index\" : index};\n    fetch('http://127.0.0.1:5000/api/getEntry', {\n        crossDomain: true,\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },  \n        body: JSON.stringify(data),\n        })  \n        .then(response => response.json())\n        .then(data => {\n        console.log('Success', data);\n        this.handleLoad();\n})\n}\n\n\nhandleLoad() {\n    const data = { \"email\": this.props.email }\n    fetch('http://127.0.0.1:5000/api/pullHabits', {\n        crossDomain: true,\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify(data),\n        })\n        .then(response => response.json())\n        .then(data => {\n        console.log('Success', data);\n        if (data.message !== false){\n            var len = data.['nameOfHabit'].length;\n            var size = Object.keys(data['nameOfHabit']).length;\n            var list = []\n            for (var i = 0; i < len; i++){\n                list.push(this.handlePopulate(data, i))\n             }   \n            this.setState({\n                list: list\n            })\n            this.forceUpdate();\n            }\n    })\n}\n\n\nhandlePopulate(data, i) {\n    return (\n    <Table striped bordered hover variant=\"dark\" key={i}>\n    <thead>\n        <tr>\n        <th>\n    {data.nameOfHabit[i]}\n     </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n        <td>\n    {data.timesPerDay[i]}\n    </td>\n        <td>\n    {data.Total[i]}\n    </td>\n        <td>\n        <Button variant=\"primary\"i value={i} type=\"submit\" onClick={event => this.handleAddTotal(event, \"value\")}>\n            Add One\n        </Button>\n        </td>\n        </tr>\n    </tbody>\n    </Table>\n    )\n    }\n\n\n    render() { \n    return (\n    <div className=\"Habit\">\n    <header className=\"Habit-header\">\n        <Add email = {this.props.email} list = { this.state.list } updateList= {this.updateList }/>\n        <Habit email = {this.props.email} handleLoad= { this.handleLoad} list = { this.state.list } /> \n    </header>\n    </div>\n    );\n}\n}\nexport default LandPage;\n","import React, { Component } from 'react';\n\nclass Error extends Component {\n    constructor() {\n    super();\n    this.state = {\n    }\n    }\n    render () {\n    return (\n        <h1> ERRORRRRR </h1>\n    );\n    }\n}\n\nexport default Error;\n","// CSS\nimport './App.css';\n\n//REACT\nimport React, { Component } from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\n\n//COMPONENTS\nimport Nav from './Nav/Nav';\nimport HomePage from './HomePage/HomePage';\nimport LandPage from './LandPage/LandPage';\nimport Error from './Error/Error';\n\nclass App extends Component {\n    constructor() {\n    super();\n    this.state = { \n            email: undefined,\n            name: undefined,\n            password: undefined,\n            confirmPassword: undefined\n        }\n        this.setEmail = this.setEmail.bind(this)\n    }\n\nsetEmail(email){\n    this.setState({\n        email: email\n    })\n}\n\nrender() {\n  return (\n  <main>\n    <div className=\"App\">\n    <Nav email={this.state.email}/>\n    <header className=\"App-header\">\n\n        <Switch> \n            <Route path=\"/\" component={(routeProps)=> <HomePage setEmail={this.setEmail} {...routeProps} /> } exact/>\n            <Route path=\"/email\" component={(routeProps)=> <LandPage email={this.state.email} {...routeProps} /> } />\n            <Route component= { Error } /> \n        </Switch>\n\n    </header>\n    </div>\n    </main>\n );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from \"react-router-dom\"; \n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}